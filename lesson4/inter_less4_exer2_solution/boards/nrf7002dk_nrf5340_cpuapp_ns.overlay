
/* STEP 1.2 -  Add a pwm_led instance and change the polarity */
/{
    pwmleds {
        compatible = "pwm-leds";
        pwm_led0: pwm_led_0 {
            pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        };
    };
};

/* STEP 1.3 - Add your own custom pwm0 instance */
&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_custom>;
    pinctrl-1 = <&pwm0_csleep>;
    pinctrl-names = "default", "sleep";
};


/* STEP 1.4 - Configure which pins your custom pwm0 instance should use */
/* STEP 4.1 - Configure pwm0 to drive the GPIO pin for LED 1 */
&pinctrl {
    pwm0_custom: pwm0_custom {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 6)>;
            nordic,invert;
        };
    };

    pwm0_csleep: pwm0_csleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 6)>;
            low-power-enable;
        };
    };
};

/* STEP 5.2 - Add the servo device 
For the nRF7002DK we will be using LED2 as our "servo motor" due to voltage supply limitations. The DK can only
supply 1.8v while the motor requires a higher voltage. Since the hands on exercise follows the same configurations for all DKs, i.e that 
pwm1 simulates the parameters for the motor, you will only see LED 2 light dimly. You will also have to reconfigure the buttons so that button 1 and 2 toggles the pwm 
connected to pwm0 instead of pwm1 if you wish to see a meaningful change in LED blinking frequency.
*/
/ {
    servo: servo {
        compatible = "pwm-servo";
        pwms = <&pwm1 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        min-pulse = <PWM_USEC(1000)>;
        max-pulse = <PWM_USEC(2000)>;
    };
};

/* STEP 5.3 - Configure which pins pwm1 should use */
&pwm1 {
    status = "okay";
    pinctrl-0 = <&pwm1_custom_motor>;
    pinctrl-1 = <&pwm1_csleep_motor>;
    pinctrl-names = "default", "sleep";
};

&pinctrl {
    pwm1_custom_motor: pwm1_custom_motor {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 7)>;
            nordic,invert;
        };
    };

    pwm1_csleep_motor: pwm1_csleep_motor {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 7)>;
            low-power-enable;
        };
    };
};